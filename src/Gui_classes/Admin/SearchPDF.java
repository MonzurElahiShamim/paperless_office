/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Gui_classes.Admin;

import DB_classes.PdfDatabaseManager;
import DB_classes.databaseConnection;
import Gui_classes.pdf_Preview;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author Monzur Elahi Shamim
 */
public class SearchPDF extends javax.swing.JFrame {

	/**
	 * Creates new form
 SearchPDF
	 */
	DefaultTableModel tableModel;

	public SearchPDF() {
		initComponents();
		refreshPdfList();
		setTableLayout();
	}

	private void setTableLayout() {
		TableColumn column1 = table.getColumnModel().getColumn(0); // Name column
		column1.setPreferredWidth(10); // Set preferred width for Name column
		TableColumn column2 = table.getColumnModel().getColumn(1); // Age column
		column2.setPreferredWidth(500); // Set preferred width for Age column
		TableColumn column3 = table.getColumnModel().getColumn(2); // Age column
		column3.setPreferredWidth(200); // Set preferred width for Age column
		TableColumn column4 = table.getColumnModel().getColumn(3); // Age column
		column4.setPreferredWidth(200); // Set preferred width for Age column
	}

	private void refreshPdfList() {

		String sql = "SELECT pdf_id as ID, pdf_name as Document, create_time as 'Created Time', type FROM pdf_storage ORDER BY create_time DESC";
		searchPdf(sql);
	}

	public void searchPdf(String sql) {
		tableModel = new DefaultTableModel() {
			@Override
			public boolean isCellEditable(int row, int column) {
				return false; // Make all cells non-editable
			}
		};
		try (Connection connection = databaseConnection.connection()) {
			try (PreparedStatement statement = connection.prepareStatement(sql)) {
				try (ResultSet resultSet = statement.executeQuery()) {
					Object[] columnIdentifiers = new Object[resultSet.getMetaData().getColumnCount()];
					for (int i = 0; i < columnIdentifiers.length; i++) {
						columnIdentifiers[i] = resultSet.getMetaData().getColumnLabel(i + 1); // Use getColumnLabel to get column alias if available
					}
					tableModel.setColumnIdentifiers(columnIdentifiers);
					// Populate rows
					while (resultSet.next()) {
						Object[] row = new Object[resultSet.getMetaData().getColumnCount()];
						for (int i = 0; i < row.length; i++) {
							row[i] = resultSet.getObject(i + 1);
						}
						tableModel.addRow(row);
					}
					table.setModel(tableModel);
					setTableLayout();
				}
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	/**
	 * This method is called from within
	 * the constructor to initialize the
	 * form. WARNING: Do NOT modify this
	 * code. The content of this method
	 * is always regenerated by the Form
	 * Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        searchKeyWord = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        table.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        table.setRowHeight(25);
        table.setRowMargin(5);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        searchKeyWord.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        searchKeyWord.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchKeyWordActionPerformed(evt);
            }
        });
        searchKeyWord.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchKeyWordKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchKeyWordKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchKeyWordKeyTyped(evt);
            }
        });

        searchBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        refreshBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        refreshBtn.setText("Refresh");
        refreshBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshBtnMouseClicked(evt);
            }
        });

        backBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backBtn.setText("Back");
        backBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backBtnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(searchKeyWord, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(searchBtn)
                        .addGap(31, 31, 31)
                        .addComponent(refreshBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(backBtn))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1020, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchKeyWord, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn)
                    .addComponent(refreshBtn)
                    .addComponent(backBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1096, 613));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
		// TODO add your handling code here:
		String fileName;
		String filePath;
		if (evt.getClickCount() == 2) {
			DefaultTableModel model = (DefaultTableModel) table.getModel();
			int Myindex = table.getSelectedRow();
			int docId = Integer.valueOf(model.getValueAt(Myindex, 0).toString());
			fileName = model.getValueAt(Myindex, 1).toString();
			System.out.println(docId);
			PdfDatabaseManager.retrievePdfFromDatabase(docId, "temp/ " + fileName);
			filePath = "temp/ " + fileName;
			pdf_Preview object = new pdf_Preview(filePath, "admin", this, true);
			object.setVisible(true);

			// Create a File object representing the file to be deleted
//			File fileToDelete = new File(filePath);
//
//			// Check if the file exists before attempting to delete
//			if (fileToDelete.exists()) {
//				// Attempt to delete the file
//				boolean deletionResult = fileToDelete.delete();
//
//				// Check if the file was successfully deleted
//				if (deletionResult) {
//					System.out.println("File deleted successfully.");
//				} else {
//					System.out.println("Failed to delete the file.");
//				}
//			} else {
//				System.out.println("File does not exist.");
//			}
		}


    }//GEN-LAST:event_tableMouseClicked

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
		// TODO add your handling code here:
		String keyWord = searchKeyWord.getText();
		String searchQuery = "SELECT pdf_id as ID, pdf_name as Document, create_time as 'Created Time', type "
			+ "FROM pdf_storage "
			+ "WHERE pdf_name LIKE '%" + keyWord + "%' "
			+ "   OR create_time LIKE '%" + keyWord + "%' "
			+ "   OR type LIKE '%" + keyWord + "%' "
			+ "ORDER BY create_time DESC";

		searchPdf(searchQuery);
    }//GEN-LAST:event_searchBtnActionPerformed

    private void searchKeyWordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchKeyWordActionPerformed
		// TODO add your handling code here:
		String keyWord = searchKeyWord.getText();
		String searchQuery = "SELECT pdf_id as ID, pdf_name as Document, create_time as 'Created Time', type "
			+ "FROM pdf_storage "
			+ "WHERE pdf_name LIKE '%" + keyWord + "%' "
			+ "   OR create_time LIKE '%" + keyWord + "%' "
			+ "   OR type LIKE '%" + keyWord + "%' "
			+ "ORDER BY create_time DESC";
		searchPdf(searchQuery);
    }//GEN-LAST:event_searchKeyWordActionPerformed

    private void refreshBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshBtnMouseClicked
		// TODO add your handling code here:
		refreshPdfList();
		setTableLayout();
		searchKeyWord.setText("");
    }//GEN-LAST:event_refreshBtnMouseClicked

    private void backBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backBtnMouseClicked
        // TODO add your handling code here:
		Home_Admin object = new Home_Admin();
		object.setVisible(true);
		this.setVisible(false);
    }//GEN-LAST:event_backBtnMouseClicked

    private void searchKeyWordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyWordKeyPressed
        // TODO add your handling code here:
		
    }//GEN-LAST:event_searchKeyWordKeyPressed

    private void searchKeyWordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyWordKeyTyped
        // TODO add your handling code here:
		
    }//GEN-LAST:event_searchKeyWordKeyTyped

    private void searchKeyWordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyWordKeyReleased
        // TODO add your handling code here:
		String keyWord = searchKeyWord.getText();
		String searchQuery = "SELECT pdf_id as ID, pdf_name as Document, create_time as 'Created Time', type "
			+ "FROM pdf_storage "
			+ "WHERE pdf_name LIKE '%" + keyWord + "%' "
			+ "   OR create_time LIKE '%" + keyWord + "%' "
			+ "   OR type LIKE '%" + keyWord + "%' "
			+ "ORDER BY create_time DESC";
		searchPdf(searchQuery);
    }//GEN-LAST:event_searchKeyWordKeyReleased

	/**
	 * @param args the command line
	 * arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Windows".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(SearchPDF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(SearchPDF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(SearchPDF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(SearchPDF.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new SearchPDF().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchKeyWord;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
